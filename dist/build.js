!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define(e):(t=t||self).graphicjs=e()}(this,(function(){"use strict";return class{static getMediaDimensions(t){return t instanceof HTMLImageElement?{width:t.naturalWidth,height:t.naturalHeight}:t instanceof HTMLVideoElement?{width:t.videoWidth,height:t.videoHeight}:{width:t.width,height:t.height}}static isMediaLoaded(t){if(!(t instanceof HTMLImageElement||t instanceof HTMLVideoElement))throw new Error("Invalid argument element");return t instanceof HTMLImageElement?t.complete:t.readyState>=HTMLMediaElement.HAVE_FUTURE_DATA}static getInnerDimensions(t){const e=getComputedStyle(t);return{width:t.clientWidth-(parseFloat(e.getPropertyValue("padding-left"))+parseFloat(e.getPropertyValue("padding-right"))),height:t.clientHeight-(parseFloat(e.getPropertyValue("padding-top"))+parseFloat(e.getPropertyValue("padding-bottom")))}}static awaitMediaLoaded(t){return new Promise((e,o)=>{t.addEventListener(t instanceof HTMLVideoElement?"loadedmetadata":"load",t=>e(t),{once:!0}),t.addEventListener("error",t=>o(t),{once:!0})})}static getRotatedRectCoordinates(t,e,o,i,a=0){let r,n,l,s;if(0!==a){const d=t+o/2,h=e+i/2;r=this.getRotationCoordinate(t,e,d,h,a),n=this.getRotationCoordinate(t+o,e,d,h,a),l=this.getRotationCoordinate(t+o,e+i,d,h,a),s=this.getRotationCoordinate(t,e+i,d,h,a)}else r={x:t,y:e},n={x:t+o,y:e},l={x:t+o,y:e+i},s={x:t,y:e+i};return[r,n,l,s]}static getRotationCoordinate(t,e,o,i,a){const r=a*(Math.PI/180),n=Math.sin(r),l=Math.cos(r);return{x:l*(t-o)-n*(e-i)+o,y:n*(t-o)+l*(e-i)+i}}static getCenterCoordinate(...t){const e=t.reduce((t,{x:e,y:o})=>(t.x+=e,t.y+=o,t),{x:0,y:0});return e.x/=t.length,e.y/=t.length,e}static getAngleBetweenCoordinates(t,e,o,i){return 180*Math.atan2(i-e,o-t)/Math.PI}static getDistance(t,e,o,i){return Math.sqrt(Math.pow(o-t,2)+Math.pow(i-e,2))}static fitParent(t,e,o){const{width:i,height:a}=this.getMediaDimensions(t),r=getComputedStyle(t),n=getComputedStyle(e),l=parseFloat(n.getPropertyValue("width"))-parseFloat(n.getPropertyValue("padding-right"))-parseFloat(n.getPropertyValue("border-right-width"))-parseFloat(n.getPropertyValue("padding-left"))-parseFloat(n.getPropertyValue("border-left-width")),s=parseFloat(n.getPropertyValue("height"))-parseFloat(n.getPropertyValue("padding-top"))-parseFloat(n.getPropertyValue("border-top-width"))-parseFloat(n.getPropertyValue("padding-bottom"))-parseFloat(n.getPropertyValue("border-bottom-width")),d=parseFloat(n.getPropertyValue("padding-top"))+parseFloat(n.getPropertyValue("border-top-width"))+parseFloat(n.getPropertyValue("margin-top")),h=parseFloat(n.getPropertyValue("padding-left"))+parseFloat(n.getPropertyValue("border-left-width"))+parseFloat(n.getPropertyValue("margin-left")),g=l/i,c=s/a,p="contain"===o?Math.min(g,c):Math.max(g,c),u=h+(l-i*p)/2,y=d+(s-a*p)/2,f=i*p,w=a*p;"cover"===o&&(e.style.overflow="hidden"),"static"===n.getPropertyValue("position")&&(e.style.position="relative"),"absolute"!==r.getPropertyValue("position")&&(t.style.position="absolute"),t.style.left=u+"px",t.style.top=y+"px",t.style.width=f+"px",t.style.height=w+"px"}static getRenderClientRect(t){const e=getComputedStyle(t).getPropertyValue("object-fit"),o=getComputedStyle(t).getPropertyValue("object-position").split(" "),{width:i,height:a}=this.getMediaDimensions(t),r=i/a,n=t.clientWidth,l=t.clientHeight,s=n/l,d=parseInt(o[0])/100,h=parseInt(o[1])/100;let g=0,c=0,p=0,u=0;const y={width:1,height:1,x:0,y:0};return"none"===e?(g=n,c=l,p=(i-n)*d,u=(a-l)*h):"contain"===e||"scale-down"===e?(g=i,c=a,r>s?(y.height=a/l/(i/n),y.y=(1-y.height)*h):(y.width=i/n/(a/l),y.x=(1-y.width)*d)):"cover"===e?r>s?(g=a*s,c=a,p=(i-g)*d):(g=i,c=i/s,u=(a-c)*h):"fill"===e?(g=i,c=a):console.error(`Unexpected object-fit attribute with value ${e} relative to`),{x:p,y:u,width:g,height:c,destination:y}}static drawPoint(t,e,o,i){i=Object.assign({radius:3,color:"rgb(0,64,221)"},i||{});const a=t.getContext("2d");a.beginPath(),a.arc(e,o,i.radius,0,2*Math.PI),a.fillStyle=i.color,a.fill()}static drawCenterPoint(t,e,o){o=Object.assign({radius:3,color:"rgb(0,64,221)"},o||{});const{x:i,y:a}=this.getCenterCoordinate(...e);this.drawPoint(t,i,a,o)}static drawRectangle(t,e,o,i,a,r){r=Object.assign({degree:0,lineWidth:2,lineColor:"rgb(0,64,221)",shadowBlur:0,shadowColor:"rgb(0,64,221)",fill:void 0},r||{});const n=this.getRotatedRectCoordinates(e,o,i,a,r.degree),l=t.getContext("2d");l.lineWidth=r.lineWidth,l.strokeStyle=r.lineWidth?r.lineColor:"transparent",r.shadowBlur&&(l.shadowOffsetX=0,l.shadowOffsetY=0,l.shadowBlur=r.shadowBlur,l.shadowColor=r.shadowColor),l.beginPath(),l.moveTo(n[0].x,n[0].y),l.lineTo(n[1].x,n[1].y),l.lineTo(n[2].x,n[2].y),l.lineTo(n[3].x,n[3].y),l.closePath(),l.stroke(),r.fill&&(l.fillStyle=r.fill,l.fill())}static drawRectangleCorners(t,e,o,i,a,r){r=Object.assign({lineWidth:2,lineColor:"rgb(0,64,221)",shadowBlur:0,shadowColor:"rgb(0,64,221)"},r||{});const n=t.getContext("2d");r.lineWidth&&(n.strokeStyle=r.lineColor,n.lineWidth=r.lineWidth),r.shadowBlur&&(n.shadowOffsetX=0,n.shadowOffsetY=0,n.shadowBlur=r.shadowBlur,n.shadowColor=r.shadowColor);const l=Math.min(i,a)/4;n.beginPath(),n.moveTo(e,o+l),n.lineTo(e,o),n.lineTo(e+l,o),n.moveTo(e+i-l,o),n.lineTo(e+i,o),n.lineTo(e+i,o+l),n.moveTo(e,o+a-l),n.lineTo(e,o+a),n.lineTo(e+l,o+a),n.moveTo(e+i-l,o+a),n.lineTo(e+i,o+a),n.lineTo(e+i,o+a-l),n.stroke()}static drawText(t,e,o,i,a){a=Object.assign({font:"14px arial,sans-serif",color:"black",align:"left",baseline:"top"},a||{});const r=t.getContext("2d");r.font=a.font,r.fillStyle=a.color,r.textAlign=a.align,r.textBaseline=a.baseline,r.fillText(e,o,i)}static drawLine(t,e,o,i,a,r){r=Object.assign({lineWidth:1,color:"rgb(0,64,221)"},r||{});const n=t.getContext("2d");n.beginPath(),n.moveTo(e,o),n.lineTo(i,a),n.strokeStyle=r.color,n.lineWidth=r.lineWidth,n.stroke()}static clearCanvas(t){t.getContext("2d").clearRect(0,0,t.width,t.height)}static flipHorizontal(t){const e=t.getContext("2d"),o=e.getImageData(0,0,t.width,t.height),i=o.height,a=o.width;for(let t=0;t<i;t++)for(let e=0;e<a/2;e++){const i=4*t*a+4*e,r=4*(t+1)*a-4*(e+1);for(let t=0;t<4;t++){let e=o.data[i+t];o.data[i+t]=o.data[r+t],o.data[r+t]=e}}e.putImageData(o,0,0,0,0,a,i)}}}));
